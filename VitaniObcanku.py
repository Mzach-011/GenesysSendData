import pyodbc
import pandas as pd
from datetime import datetime, timedelta
import getpass
import os
import msoffcrypto
import io
import win32com.client as win32

#***********************************************************
#Autor: mzach
#Popis: Konzolov√° aplikace, kter√° slou≈æ√≠ k odesl√°n√≠ report≈Ø mailem - aktu√°lnƒõ obsahuje dva r≈Øzn√© reporty (chybƒõj√≠c√≠ obƒçanky a v√≠t√°n√≠ obƒç√°nk≈Ø)
#
#Jak pou≈æ√≠t: Aktu√°lnƒõ skript nebƒõ≈æ√≠ nikde samostatnƒõ jednou dennƒõ se zapne d√°vkovej soubor (BAT) a ode≈°le se pomoc√≠ konzole
#
#Prerekvizita: Tvo≈ôeno na moje sturktury na mojem PC nutn√© upravit pro jin√© + m√≠t loglou mailovku.
#
#Changelog:
#  09.04.2025	mzach - Zalo≈æena ƒç√°st generuj√≠c√≠ json
#************************************************************/

message = """
************************************************************************************************
************************************************************************************************
************************************************************************************************
This report generation was made possible through the divine intervention of our Lord and Savior,
the DWH ArchiteKt, ArchiPanda üêºüôè. 

Without his infinite wisdom, unmatched skills in ETL, and his deep love for data, 
none of this would be possible. ArchiPanda‚Äôs work is the true backbone of the DWH universe,  
and may his pandas always be plentiful and his queries forever optimized.  
üêºüêºüêº Bless the pandas, bless the data, and bless ArchiPanda! üêºüêºüêº. 

‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£∂‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚£Ä‚£†‚°§‚†§‚†§‚†§‚†§‚†§‚£Ñ‚£Ä‚°Ä‚£¥‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£ø‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚¢ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚£†‚£§‚£§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£§‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†É‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚£ø‚°ü‚£Ä‚£Ä‚£Ä‚£Ä‚¢∏‚£ø‚£ø‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚£ß‚°Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°Ä‚°ü‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚°è‚†ò‚¢ø‚£ø‚£ø‚£ø‚†è‚†ô‚£ø‚£ø‚£ø‚°á‚¢Ä‚£¥‚£æ‚°ø‚¢ø‚°ø‚¢ø‚£∂‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£∂‚£Ñ‚†Ä‚†Ä‚†ª‚£ø‚†ø‚†É‚††‚£Ä‚£®‚£è‚£Ä‚°Ä‚†Ä‚†ª‚†ø‚°ø‚†Å‚¢∏‚£ø‚£π‚°∑‚†ø‚†ø‚¢ø‚£ç‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä
‚£Ä‚£Ä‚£Ä‚£Ä‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£ò‚£ø‚£ø‚£Ñ‚£Ä‚£Ä‚£Ä‚£ø‚£ø‚£á‚£Ä‚£Ä‚£Ä‚£§
‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†â‚†â‚†Å
***********************************************************************************************
***********************************************************************************************
***********************************************************************************************
"""

print(message)

print ("Vyber kterou blbost generuju:")
print ("Zm√°ƒçkni 1 pro v√≠t√°n√≠ obƒç√°nk≈Ø")
print ("Zm√°ƒçkni 2 pro ty co po cestƒõ ztratili obƒçanku nebo j√≠ nezvl√°dli vyfoti z obou stran")
user_choice = input("M√°ƒçk: ")

#Jednoduch√© nastaven√≠ pro jednotliv√© reporty (do t√©to ƒç√°sti by bylo samoz≈ôejmƒõ vhodn√© p≈ôehodit i recipienty apod., jeliko≈æ ale chod√≠ na stejn√© ne≈ôe≈°√≠m)
if user_choice == '1':
    procedure = "[dbo].[usp_GetNewAccounts]"
    subject = "Sestava nov√Ωch klient≈Ø za p≈ôedchoz√≠ dny"
    body = "Hello, \n\nAttached is the report for the new clients.\n\nBest regards. \n MZ"
    save_directory = r"H:\ACT_SKRIPTY_USEFULL\Zdraveni_Novych_Klientu_Ahoj\AutomatedGenerationNewClients"  
    excel_password = "TB_SA_NewClients_1"  # Password for NewClients
elif user_choice == '2':
    procedure = "[dbo].[usp_GetApplicationsWithoutID]"  
    subject = "Sestava chybƒõj√≠c√≠ch ID"
    body = "Hello, \n\nAttached is the report for the missing or incomplete  IDs.\n\nBest regards. \n MZ"
    save_directory = r"H:\ACT_SKRIPTY_USEFULL\Obcanky_MM\AutomatedGenerationMissingIds"  
    excel_password = "TB_SA_IDs_1"  # Password for MissingIds
else:
    print("It's impossible to underestimate you")
    exit()


#Nastaven√≠ u≈æivatele a hesla pro DB (p≈ôedvyplnƒõn je tam owner)
default_username = "SVC_DWH_PROD_OWNER"    
username = input(f"UID (Owner) [{default_username}]: ") or default_username
password = getpass.getpass("Heslo: ")

#Nastaven√≠ connectiony a DB aktu√°lnƒõ m≈Ø≈æe bƒõ≈æet nad jednou DB samoz≈ôejmƒõ mo≈æn√© p≈ôihodit do parametr≈Ø v√Ω≈°e
server = "msdwh-dwh.mpu.cz"
database = "DWH_L1_OnlnCore"

#Bordel z D-1 asi pro srandu kral√≠k≈Øm sp√≠≈° 
cur_date = datetime.now().date()
used_date = cur_date - timedelta(days=1)
used_date_str = used_date.strftime('%Y-%m-%d')

print(f"Executing stored procedure: EXEC {procedure} '{used_date_str}'")

try:
    #Connectiona do SQl
    conn = pyodbc.connect(f"DRIVER={{SQL Server}};SERVER={server};DATABASE={database};UID={username};PWD={password}")
    cursor = conn.cursor()

    print("Connection established successfully")

    # Pust procku - mus√≠ bejt SET NOCOUN ON !!!!! 
    cursor.execute(f"SET NOCOUNT ON; EXEC {procedure} '{used_date_str}'")

    # Nahraj srajdy 
    columns = [column[0] for column in cursor.description]  # Get column names
    rows = cursor.fetchall()

    if rows:
        df = pd.DataFrame.from_records(rows, columns=columns)
        print(f"Rows returned: {len(df)}")

        # Dynamically set the report name based on procedure
        if procedure == "[dbo].[usp_GetNewAccounts]":
            report_name = "NewClients"
        elif procedure == "[dbo].[usp_GetApplicationsWithoutID]":
            report_name = "ApplicationsWithoutID"
        else:
            report_name = "UnknownReport"  # Default name if neither matches

        # Set the file path with the dynamic name
        output_file = os.path.join(save_directory, f"{report_name}_{used_date_str}.xlsx")
        encrypted_file = os.path.join(save_directory, f"{report_name}_{used_date_str}_protected.xlsx")

        # Save the unprotected Excel file
        df.to_excel(output_file, index=False, engine="openpyxl")

        # tady u≈æ tvo≈ô√≠m ten Excel pro zaheslovan√Ω hodnoty 
        encrypted = io.BytesIO()

        #Zahesluj
        with open(output_file, "rb") as f:
            office_file = msoffcrypto.OfficeFile(f)
            office_file.encrypt(excel_password, encrypted)  # heslo z parametr≈Ø nastavenejch

            # lalala
            with open(encrypted_file, "wb") as ef:
                ef.write(encrypted.getvalue())  # Napal data z prvn√≠ho do tohodle
        #Existuje nƒõjakej zakryptovanej soubor
        print(f"üîí Encrypted Excel file saved at: {encrypted_file}")

        # najdi nejnovƒõj≈°√≠ excel v t√Ω slo≈æce, kterej je protected (podle data ulo≈æen√≠ tam)
        files = [f for f in os.listdir(save_directory) if f.endswith('.xlsx') and '_protected' in f]
        latest_file = max(files, key=lambda x: os.path.getmtime(os.path.join(save_directory, x)))

        # Vytvo≈ôen√≠ cesty jen k tomu excelu
        latest_file_path = os.path.join(save_directory, latest_file)

        # Draft excel appky 
        outlook = win32.Dispatch("Outlook.Application")
        mail = outlook.CreateItem(0)  # 0: olMailItem => mus√≠ bejt CreateItem0 to je novej mail

        mail.Subject = subject
        mail.Body = body

       # mail.To = "mzach@mediso.cz"
        mail.To = "JNejepsa@mediso.cz"  #Aktu√°lnƒõ nastaveno takhle ale jak jsem psal mohlo by bejt v parametrech naho≈ôe 
        mail.CC = "mzach@mediso.cz;LSmolak@mediso.cz"  # CC recipients
        mail.Attachments.Add(latest_file_path)

        mail.Send()
        print(f"Odeslal jsem E-mail.Panda by byla hrd√°.")

    else:
        print("Procka nevr√°tila ≈æ√°dn√° data..")

except Exception as e:
    print(f"Error occurred: {str(e)}")

finally:
    if cursor:
        cursor.close()
    if conn:
        conn.close()
